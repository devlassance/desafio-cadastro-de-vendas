services:
  # PHP-FPM + Laravel app container
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sales-backend
    working_dir: /var/www/html
    volumes:
      - ./backend/src:/var/www/html
      - composer-cache:/tmp/composer
    environment:
      - APP_ENV=local
      - APP_DEBUG=1
      - APP_URL=http://localhost:8080
      - DB_CONNECTION=mysql
      - DB_HOST=db
      - DB_DATABASE=sales
      - DB_USERNAME=root
      - DB_PASSWORD=root
      - REDIS_HOST=redis
    depends_on:
      db:
        condition: service_healthy
    networks:
      - appnet

  # Nginx to serve Laravel public
  nginx:
    image: nginx:1.25-alpine
    container_name: sales-nginx
    ports:
      - "8080:80"
    volumes:
      - ./backend/src:/var/www/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend
    networks:
      - appnet

  # Node + Vue dev server
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sales-frontend
    ports:
      - "5173:5173"
    environment:
      - HOST=0.0.0.0
    volumes:
      - ./frontend/app:/usr/src/app
    working_dir: /usr/src/app
    networks:
      - appnet

  # MySQL database
  db:
    image: mysql:8.0
    container_name: sales-db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: sales
    ports:
      - "3306:3306"
    volumes:
      - db-data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d:ro
    command: ["mysqld", "--default-authentication-plugin=mysql_native_password"]
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -uroot -proot --silent"]
      interval: 5s
      timeout: 5s
      retries: 20
    networks:
      - appnet

  # Redis
  redis:
    image: redis:7.0-alpine
    container_name: sales-redis
    ports:
      - "6379:6379"
    networks:
      - appnet

volumes:
  db-data:
  composer-cache:

networks:
  appnet:
    driver: bridge
